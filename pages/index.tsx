// pages/index.tsx
import Head from "next/head";
import { GetServerSideProps } from "next";
import { createClient } from "@supabase/supabase-js";
import React, { useEffect } from "react";
import { useRouter } from "next/router";
import Button from "@/components/Button";

export const getServerSideProps: GetServerSideProps = async (context) => {
  const supabase = createClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL as string,
    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY as string,
    {
      auth: {
        persistSession: false,
        autoRefreshToken: false,
      },
    }
  );

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Å—Å–∏—é –∏–∑ cookies
  const cookieHeader = context.req.headers.cookie || "";
  const cookies = cookieHeader.split(";").reduce((acc, cookie) => {
    const [key, value] = cookie.trim().split("=");
    if (key && value) {
      acc[key.trim()] = decodeURIComponent(value.trim());
    }
    return acc;
  }, {} as Record<string, string>);

  // –ò—â–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ cookies
  let accessToken: string | undefined;
  
  // –ü—Ä—è–º–æ–π access token
  if (cookies["sb-access-token"]) {
    accessToken = cookies["sb-access-token"];
  } 
  // Generic auth token (JSON —Ñ–æ—Ä–º–∞—Ç)
  else if (cookies["sb-generic-auth-token"]) {
    try {
      const parsed = JSON.parse(cookies["sb-generic-auth-token"]);
      accessToken = parsed?.access_token;
    } catch {
      // –ï—Å–ª–∏ –Ω–µ JSON, –ø—Ä–æ–±—É–µ–º –∫–∞–∫ –ø—Ä—è–º–æ–π —Ç–æ–∫–µ–Ω
      accessToken = cookies["sb-generic-auth-token"];
    }
  }
  // –ò—â–µ–º –ª—é–±–æ–π cookie —Å auth-token
  else {
    for (const [key, value] of Object.entries(cookies)) {
      if (key.includes("auth-token")) {
        try {
          const parsed = JSON.parse(value);
          accessToken = parsed?.access_token || parsed;
          break;
        } catch {
          accessToken = value;
          break;
        }
      }
    }
  }

  if (accessToken) {
    try {
      const { data: { user }, error } = await supabase.auth.getUser(accessToken);
      if (user && !error) {
        return {
          redirect: {
            destination: "/page",
            permanent: false,
          },
        };
      }
    } catch {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞
    }
  }

  return {
    props: {},
  };
};

export default function Home() {
  const router = useRouter();

  useEffect(() => {
    // –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (fallback)
    const checkAuth = async () => {
      const { supabase } = await import("@/lib/supabaseClient");
      const { data: { session } } = await supabase.auth.getSession();
      if (session) {
        router.push("/page");
      }
    };
    checkAuth();
  }, [router]);

  return (
    <>
      <Head>
        <title>Sigmet</title>
        <meta name="description" content="Sigmet social network" />
      </Head>

      <section className="relative overflow-hidden min-h-screen bg-telegram-gradient">
        {/* Telegram-style gradient background */}
        <div
          aria-hidden
          className="pointer-events-none absolute inset-0 opacity-30"
          style={{
            backgroundImage:
              "radial-gradient(circle at 20% 30%, rgba(51, 144, 236, 0.15), transparent 50%), radial-gradient(circle at 80% 70%, rgba(51, 144, 236, 0.1), transparent 50%)",
          }}
        />

        <div className="relative max-w-7xl mx-auto px-4 py-16 md:py-24">
          {/* Hero Section */}
          <div className="grid md:grid-cols-2 gap-10 items-center mb-20">
            <div>
              <div className="inline-flex items-center gap-2 rounded-full border border-telegram-blue/20 bg-telegram-blue/10 px-3 py-1 text-xs text-telegram-blue mb-4 backdrop-blur-sm">
                ‚ú® –ù–æ–≤–æ–µ: –ë—ã—Å—Ç—Ä–∞—è –ª–µ–Ω—Ç–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
              </div>
              <h1 className="text-4xl md:text-6xl font-bold text-telegram-text tracking-tight mb-4">
                –°–æ–∑–¥–∞–≤–∞–π —Å–≤–æ–π{" "}
                <span className="bg-gradient-to-r from-telegram-blue to-telegram-blue-light bg-clip-text text-transparent">
                  —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –≤–µ—Å
                </span>{" "}
                —á–µ—Ä–µ–∑ —Ä–µ–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
              </h1>
              <p className="mt-4 text-telegram-text-secondary text-lg leading-relaxed">
                Sigmet –ø–æ–º–æ–≥–∞–µ—Ç —Ç–µ–±–µ —Ä–∞—Å—Ç–∏ —Ü–µ–ª–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ. –î–µ–ª–∏—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π —Ü–µ–ª–∏ –∏ –Ω–∞–±–ª—é–¥–∞–π —Å–≤–æ—é —ç–≤–æ–ª—é—Ü–∏—é —á–µ—Ä–µ–∑ –¥–∞–Ω–Ω—ã–µ.
              </p>
              <div className="mt-8 flex flex-wrap gap-3">
                <Button href="/signup" variant="primary">–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç</Button>
                <Button href="/login" variant="secondary">–í–æ–π—Ç–∏</Button>
              </div>
            </div>

            <div className="relative">
              <div className="telegram-card-glow p-6 md:p-8 backdrop-blur-sm">
                <h3 className="text-telegram-text font-semibold text-xl mb-4">üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç</h3>
                <ol className="mt-4 space-y-3 text-telegram-text-secondary list-decimal list-inside">
                  <li className="pl-2">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏ email</li>
                  <li className="pl-2">–ù–∞—Å—Ç—Ä–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∏ –∞–≤–∞—Ç–∞—Ä</li>
                  <li className="pl-2">–í—ã–±–µ—Ä–∏ 3 –∫–ª—é—á–µ–≤—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ—Å—Ç–∞</li>
                  <li className="pl-2">–ù–∞—á–Ω–∏ –¥–µ–ª–∏—Ç—å—Å—è –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å</li>
                </ol>
                <Button href="/signup" variant="primary" className="mt-6 w-full">–ù–∞—á–∞—Ç—å</Button>
              </div>
            </div>
          </div>

          {/* Features Grid */}
          <div className="mt-20 grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="telegram-card-feature group">
              <div className="icon-wrapper mb-4">
                <div className="w-12 h-12 rounded-full bg-telegram-blue/20 flex items-center justify-center text-2xl group-hover:bg-telegram-blue/30 transition-colors">
                  üéØ
                </div>
              </div>
              <h3 className="text-telegram-text font-semibold text-xl mb-2">–¶–µ–ª–µ–≤—ã–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞</h3>
              <p className="text-telegram-text-secondary leading-relaxed">
                –§–æ–∫—É—Å –Ω–∞ –≤–∞–∂–Ω–æ–º. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –≥—Ä—É–ø–ø–∞–º, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç–≤–æ–∏–º —Ü–µ–ª—è–º ‚Äî –º–µ–Ω—å—à–µ —à—É–º–∞, –±–æ–ª—å—à–µ —Å–º—ã—Å–ª–∞.
              </p>
            </div>
            
            <div className="telegram-card-feature group">
              <div className="icon-wrapper mb-4">
                <div className="w-12 h-12 rounded-full bg-telegram-blue/20 flex items-center justify-center text-2xl group-hover:bg-telegram-blue/30 transition-colors">
                  ‚öñÔ∏è
                </div>
              </div>
              <h3 className="text-telegram-text font-semibold text-xl mb-2">–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –≤–µ—Å</h3>
              <p className="text-telegram-text-secondary leading-relaxed">
                –†–µ–ø—É—Ç–∞—Ü–∏—è, –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –Ω–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –≤–∫–ª–∞–¥–µ –∏ –æ–±—É—á–µ–Ω–∏–∏.
              </p>
            </div>
            
            <div className="telegram-card-feature group">
              <div className="icon-wrapper mb-4">
                <div className="w-12 h-12 rounded-full bg-telegram-blue/20 flex items-center justify-center text-2xl group-hover:bg-telegram-blue/30 transition-colors">
                  ü™∂
                </div>
              </div>
              <h3 className="text-telegram-text font-semibold text-xl mb-2">–≠–∫–æ—Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —Å–æ–∑–¥–∞—Ç–µ–ª–µ–π</h3>
              <p className="text-telegram-text-secondary leading-relaxed">
                –ü–æ–ª–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞, —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–µ –∞–≤—Ç–æ—Ä—Å—Ç–≤–æ –∏ –≤–∏–¥–∏–º–æ—Å—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è.
              </p>
            </div>
          </div>

          {/* Updates Section */}
          <div className="mt-20 telegram-card-glow p-6 md:p-8 backdrop-blur-sm">
            <h3 className="text-telegram-text text-xl font-semibold mb-4">üì¢ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</h3>
            <ul className="text-telegram-text-secondary list-disc list-inside space-y-2">
              <li>–ù–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –ø—Ä–æ—Ñ–∏–ª—è —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π</li>
              <li>–ë—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ –ª–µ–Ω—Ç–µ</li>
              <li>–£–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞</li>
            </ul>
          </div>
        </div>
      </section>
    </>
  );
}
